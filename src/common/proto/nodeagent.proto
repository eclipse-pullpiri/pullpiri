/*
 * SPDX-FileCopyrightText: Copyright 2024 LG Electronics Inc.
 * SPDX-License-Identifier: Apache-2.0
 */

syntax = "proto3";

package nodeagent;

// NodeAgent service for cluster communication as per Korean LLD specification
service NodeAgentService {
  rpc HandleYaml(HandleYamlRequest) returns (HandleYamlResponse);
  rpc RegisterNode(NodeRegistrationRequest) returns (NodeRegistrationResponse);
  rpc ReportStatus(StatusReport) returns (StatusAck);
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
  rpc ReceiveConfig(ConfigRequest) returns (ConfigResponse);
}

message HandleYamlRequest {
  string yaml = 1;
}

message HandleYamlResponse {
  bool status = 1;
  string desc = 2;
}

// Node Registration Messages
message NodeRegistrationRequest {
  string node_id = 1;
  string hostname = 2;
  string ip_address = 3;
  NodeRole role = 4;
  ResourceInfo resources = 5;
  Credentials credentials = 6;
}

message NodeRegistrationResponse {
  bool success = 1;
  string message = 2;
  string cluster_id = 3;
}

// Status reporting messages
message StatusReport {
  string node_id = 1;
  NodeStatus status = 2;
  map<string, string> metrics = 3;
  repeated ContainerStatus containers = 4;
  repeated AlertInfo alerts = 5;
}

message StatusAck {
  bool acknowledged = 1;
  string message = 2;
}

// Heartbeat Messages
message HeartbeatRequest {
  string node_id = 1;
  NodeStatus status = 2;
  int64 timestamp = 3;
  map<string, string> metrics = 4;
}

message HeartbeatResponse {
  bool acknowledged = 1;
  string message = 2;
  int64 server_timestamp = 3;
}

// Configuration messages
message ConfigRequest {
  string node_id = 1;
  map<string, string> config = 2;
}

message ConfigResponse {
  bool success = 1;
  string message = 2;
}

// Data Structures
message NodeInfo {
  string node_id = 1;
  string hostname = 2;
  string ip_address = 3;
  NodeRole role = 4;
  NodeStatus status = 5;
  ResourceInfo resources = 6;
  map<string, string> labels = 7;
  int64 created_at = 8;
  int64 last_heartbeat = 9;
}

message ResourceInfo {
  uint32 cpu_cores = 1;
  uint64 memory_mb = 2;
  uint64 disk_gb = 3;
  double cpu_usage = 4;
  double memory_usage = 5;
}

message Credentials {
  string token = 1;
  string certificate = 2;
}

message ContainerStatus {
  string container_id = 1;
  string name = 2;
  string image = 3;
  string status = 4;
  int64 created_at = 5;
}

message AlertInfo {
  string alert_id = 1;
  string level = 2;
  string message = 3;
  int64 timestamp = 4;
}

enum NodeRole {
  UNKNOWN_ROLE = 0;
  MASTER = 1;
  SUB = 2;
}

enum NodeStatus {
  PENDING = 0;
  INITIALIZING = 1;
  READY = 2;
  NOT_READY = 3;
  MAINTENANCE = 4;
  TERMINATING = 5;
}
